{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport RegisterView from '../views/RegisterView.vue';\nimport LoginView from '../views/LoginView.vue';\nimport DashboardView from '../views/DashboardView.vue';\nimport EditAppointmentView from '../views/EditAppointmentView.vue';\nconst routes = [{\n  path: '/',\n  redirect: '/login'\n},\n// Adicionado para segurança\n{\n  path: '/register',\n  name: 'register',\n  component: RegisterView\n}, {\n  path: '/login',\n  name: 'login',\n  component: LoginView\n}, {\n  path: '/dashboard',\n  name: 'dashboard',\n  component: DashboardView,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/edit/:id',\n  name: 'editAppointment',\n  component: EditAppointmentView,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/:catchAll(.*)',\n  redirect: '/login'\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\n\n// --- GUARDA DE ROTAS ATUALIZADO E CORRIGIDO ---\nrouter.beforeEach((to, from, next) => {\n  const token = localStorage.getItem('authToken');\n  const isAuthenticated = !!token;\n\n  // Se a rota precisa de login E o usuário NÃO está autenticado\n  if (to.meta.requiresAuth && !isAuthenticated) {\n    next({\n      name: 'login'\n    }); // Manda para a página de login\n  }\n  // Se a rota é login ou registro E o usuário JÁ está autenticado\n  else if ((to.name === 'login' || to.name === 'register') && isAuthenticated) {\n    next({\n      name: 'dashboard'\n    }); // Manda para o dashboard\n  }\n  // Em todos os outros casos, permite a navegação\n  else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","RegisterView","LoginView","DashboardView","EditAppointmentView","routes","path","redirect","name","component","meta","requiresAuth","router","history","process","env","BASE_URL","beforeEach","to","from","next","token","localStorage","getItem","isAuthenticated"],"sources":["C:/Users/rafae/OneDrive/Desktop/clinica-inteligente/frontend/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\n\nimport RegisterView from '../views/RegisterView.vue'\nimport LoginView from '../views/LoginView.vue'\nimport DashboardView from '../views/DashboardView.vue'\nimport EditAppointmentView from '../views/EditAppointmentView.vue'\n\nconst routes = [\n  { path: '/', redirect: '/login' }, // Adicionado para segurança\n  { path: '/register', name: 'register', component: RegisterView },\n  { path: '/login', name: 'login', component: LoginView },\n  {\n    path: '/dashboard',\n    name: 'dashboard',\n    component: DashboardView,\n    meta: { requiresAuth: true }\n  },\n  {\n    path: '/edit/:id',\n    name: 'editAppointment',\n    component: EditAppointmentView,\n    meta: { requiresAuth: true }\n  },\n  { path: '/:catchAll(.*)', redirect: '/login' }\n]\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n})\n\n// --- GUARDA DE ROTAS ATUALIZADO E CORRIGIDO ---\nrouter.beforeEach((to, from, next) => {\n  const token = localStorage.getItem('authToken');\n  const isAuthenticated = !!token;\n\n  // Se a rota precisa de login E o usuário NÃO está autenticado\n  if (to.meta.requiresAuth && !isAuthenticated) {\n    next({ name: 'login' }); // Manda para a página de login\n  } \n  // Se a rota é login ou registro E o usuário JÁ está autenticado\n  else if ((to.name === 'login' || to.name === 'register') && isAuthenticated) {\n    next({ name: 'dashboard' }); // Manda para o dashboard\n  } \n  // Em todos os outros casos, permite a navegação\n  else {\n    next();\n  }\n});\n\nexport default router"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAE3D,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,mBAAmB,MAAM,kCAAkC;AAElE,MAAMC,MAAM,GAAG,CACb;EAAEC,IAAI,EAAE,GAAG;EAAEC,QAAQ,EAAE;AAAS,CAAC;AAAE;AACnC;EAAED,IAAI,EAAE,WAAW;EAAEE,IAAI,EAAE,UAAU;EAAEC,SAAS,EAAER;AAAa,CAAC,EAChE;EAAEK,IAAI,EAAE,QAAQ;EAAEE,IAAI,EAAE,OAAO;EAAEC,SAAS,EAAEP;AAAU,CAAC,EACvD;EACEI,IAAI,EAAE,YAAY;EAClBE,IAAI,EAAE,WAAW;EACjBC,SAAS,EAAEN,aAAa;EACxBO,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEL,IAAI,EAAE,WAAW;EACjBE,IAAI,EAAE,iBAAiB;EACvBC,SAAS,EAAEL,mBAAmB;EAC9BM,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EAAEL,IAAI,EAAE,gBAAgB;EAAEC,QAAQ,EAAE;AAAS,CAAC,CAC/C;AAED,MAAMK,MAAM,GAAGb,YAAY,CAAC;EAC1Bc,OAAO,EAAEb,gBAAgB,CAACc,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EAC/CX;AACF,CAAC,CAAC;;AAEF;AACAO,MAAM,CAACK,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAC/C,MAAMC,eAAe,GAAG,CAAC,CAACH,KAAK;;EAE/B;EACA,IAAIH,EAAE,CAACR,IAAI,CAACC,YAAY,IAAI,CAACa,eAAe,EAAE;IAC5CJ,IAAI,CAAC;MAAEZ,IAAI,EAAE;IAAQ,CAAC,CAAC,CAAC,CAAC;EAC3B;EACA;EAAA,KACK,IAAI,CAACU,EAAE,CAACV,IAAI,KAAK,OAAO,IAAIU,EAAE,CAACV,IAAI,KAAK,UAAU,KAAKgB,eAAe,EAAE;IAC3EJ,IAAI,CAAC;MAAEZ,IAAI,EAAE;IAAY,CAAC,CAAC,CAAC,CAAC;EAC/B;EACA;EAAA,KACK;IACHY,IAAI,CAAC,CAAC;EACR;AACF,CAAC,CAAC;AAEF,eAAeR,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}